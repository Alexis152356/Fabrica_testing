name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel-ci-cd:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: fabrica_testing
        ports:
          - 3306:3306

    steps:
    # 1. Clonar el repositorio
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Configurar PHP y dependencias
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, pdo, xml, bcmath, zip

    - name: Install Composer Dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    # 3. Configurar el entorno de base de datos
    - name: Set up database environment variables
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=mysql" >> .env  # Cambiado a mysql para hacer referencia al servicio MySQL
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=fabrica_testing" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=secret" >> .env

    - name: Generate Application Key
      run: php artisan key:generate

    # 4. Ejecutar migraciones y pruebas
    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to be ready..."
        sleep 15  # Espera 15 segundos para asegurarte de que MySQL está listo

    - name: Run Migrations
      run: php artisan migrate --env=testing --no-interaction --force

    - name: Run Tests
      run: php artisan test --env=testing

    # 5. Empaquetar aplicación
    - name: Package Application
      run: zip -r laravel_app.zip .

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: laravel_app
        path: laravel_app.zip

    # 6. Construir imagen Docker
    - name: Build Docker Image
      run: docker build -t laravel-app:latest .

    # 7. Ejecutar contenedor Docker usando docker-compose
    - name: Run Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
