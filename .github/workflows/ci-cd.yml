name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel-ci-cd:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: fabrica_testing
        ports:
          - 3306:3306

    steps:
    # 1. Clonar el repositorio
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Configurar PHP y dependencias
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, pdo, xml, bcmath, zip

    - name: Install Composer Dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    # 3. Configurar el entorno
    - name: Copy .env
      run: cp .env.example .env

    - name: Set up database environment variables
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env  # Cambiado a 127.0.0.1 ya que MySQL está en el servicio mysql
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=fabrica_testing" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=secret" >> .env

    - name: Generate Application Key
      run: php artisan key:generate

    # 4. Instalar dockerize
    - name: Install dockerize
      run: |
        curl -sSL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar -xzv
        sudo mv dockerize /usr/local/bin/

    # 5. Esperar a que MySQL esté disponible
    - name: Wait for MySQL
      run: dockerize -wait tcp://mysql:3306 -timeout 60s

    # 6. Ejecutar migraciones y pruebas
    - name: Run Migrations
      run: php artisan migrate --env=testing --no-interaction --force

    - name: Run Tests
      run: php artisan test --env=testing

    # 7. Empaquetar aplicación
    - name: Package Application
      run: zip -r laravel_app.zip .

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: laravel_app
        path: laravel_app.zip

    # 8. Construir imagen Docker
    - name: Build Docker Image
      run: docker build -t laravel-app:latest .

    # 9. Desplegar imagen Docker localmente
    - name: Run Docker Container
      run: |
        docker run -d -p 8080:80 --name laravel-app laravel-app:latest
